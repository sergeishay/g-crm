[{"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\index.js":"1","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\reportWebVitals.js":"2","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\App.js":"3","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\header\\NavBar.jsx":"4","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\footer\\Footer.jsx":"5","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\LandingPage.jsx":"6","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\ClientsPage.jsx":"7","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Layout.jsx":"8","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\AboutPage.jsx":"9","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\header\\NavBarElements.jsx":"10","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\CardComponent.jsx":"11","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\BrendPage.jsx":"12","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Client.jsx":"13","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\ClientModal.jsx":"14","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\UpdateModal.jsx":"15","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Client\\ClientStore.jsx":"16","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\input-hook.jsx":"17","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Client\\ClientData.jsx":"18","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Brend\\BrendStore.jsx":"19","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Brend\\BrendData.jsx":"20","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\BrendsCardComponent.jsx":"21","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\BrendModal.jsx":"22","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\BrendUpdateModal.jsx":"23","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\PostStore.jsx":"24","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\PostPage.jsx":"25","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\TableComponent.jsx":"26"},{"size":524,"mtime":1610973715038,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":431,"mtime":1609319695596,"results":"30","hashOfConfig":"28"},{"size":718,"mtime":1621355269955,"results":"31","hashOfConfig":"28"},{"size":338,"mtime":1609175013577,"results":"32","hashOfConfig":"33"},{"size":1215,"mtime":1610973715023,"results":"34","hashOfConfig":"28"},{"size":2915,"mtime":1621355269933,"results":"35","hashOfConfig":"28"},{"size":1422,"mtime":1623093168700,"results":"36","hashOfConfig":"28"},{"size":268,"mtime":1609319695639,"results":"37","hashOfConfig":"28"},{"size":1498,"mtime":1609599722039,"results":"38","hashOfConfig":"28"},{"size":4302,"mtime":1621355269930,"results":"39","hashOfConfig":"28"},{"size":2803,"mtime":1621355269924,"results":"40","hashOfConfig":"28"},{"size":215,"mtime":1610973715019,"results":"41","hashOfConfig":"28"},{"size":2768,"mtime":1621355269948,"results":"42","hashOfConfig":"28"},{"size":3306,"mtime":1621355269952,"results":"43","hashOfConfig":"28"},{"size":2005,"mtime":1621355269910,"results":"44","hashOfConfig":"28"},{"size":352,"mtime":1611087693329,"results":"45","hashOfConfig":"28"},{"size":463,"mtime":1611087693301,"results":"46","hashOfConfig":"28"},{"size":2887,"mtime":1621355269907,"results":"47","hashOfConfig":"28"},{"size":884,"mtime":1621194517428,"results":"48","hashOfConfig":"28"},{"size":5260,"mtime":1623096168960,"results":"49","hashOfConfig":"28"},{"size":4195,"mtime":1621355269941,"results":"50","hashOfConfig":"28"},{"size":6372,"mtime":1621355269943,"results":"51","hashOfConfig":"28"},{"size":3565,"mtime":1623136951278,"results":"52","hashOfConfig":"28"},{"size":5369,"mtime":1623139034156,"results":"53","hashOfConfig":"28"},{"size":7365,"mtime":1623139931494,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"j2xsoq",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"14zbzuh",{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\index.js",[],["126","127"],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\reportWebVitals.js",[],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\App.js",["128","129","130","131","132","133","134","135"],"// import './App.css';\r\nimport React , {Component} from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport LandingPage from './components/LandingPage'\r\nimport Navbar from './header/NavBar'\r\nimport Layouts from './components/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div  className='mainApp'>\r\n        <Layouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\header\\NavBar.jsx",[],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\footer\\Footer.jsx",[],["136","137"],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\LandingPage.jsx",["138","139","140","141","142","143","144","145","146","147"],"import React from 'react'\r\nimport '../styles/LandingPage.css'\r\nimport { Router, Route, Switch, Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from '../../node_modules/axios';\r\nimport computer from '../assets/computer.png'\r\nimport people from '../assets/people.png'\r\nimport mainPage from '../assets/hello.png'\r\nimport social3 from '../assets/as.png'\r\nimport ClientsPage from './ClientsPage'\r\nimport { observer } from 'mobx-react'\r\n\r\nfunction LandingPage() {\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mainEnter\">\r\n                <div className=\"mainPageImgDiv\">\r\n                    <img className=\"mainPageImg\" src={mainPage} alt=\"\" />\r\n                </div>\r\n                <div className='socialImgDiv'>\r\n                    <img className=\"socialImg\" src={social3} alt=\"\" />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='readMore'>\r\n                <div className=\"maybeform\">\r\n                    <Link to='/clients'><button className=\"clientBtn\">Take Me To Client Page</button></Link>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\ClientsPage.jsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"\r\nimport '../styles/CllientsPage.css'\r\nimport React, { useState, useEffect, useContext, useLayoutEffect } from 'react'\r\nimport axios from '../../node_modules/axios';\r\nimport { Tooltip, Button, Row } from 'antd';\r\nimport ClientsModal from './Modals/ClientModal'\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport CardComponent from './CardComponent'\r\nimport Modal from 'react-modal'\r\nimport { observer } from 'mobx-react-lite'\r\nimport ClientStoreContext from '../Stores/Client/ClientStore';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const ClientsPage = observer((props) => {\r\n\r\n    const ClientStore = useContext(ClientStoreContext)\r\n    const [clients, setClients] = useState([])\r\n    const [number, setNumber] = useState(0)\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const setModalIsOpenToTrue = () => {\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n\r\n    const renderPage = () => {\r\n        ClientStore.getAllClients()\r\n    }\r\n\r\n    useEffect(() => {\r\n        Modal.setAppElement('body')\r\n    }, [ClientStore.listOfClients])\r\n\r\n    const matches = props.match\r\n    console.log(matches)\r\n\r\n\r\n    console.log(ClientStore.listOfClients)\r\n    return (\r\n        <div className='clientsPageBody' >\r\n            <div className='addClientDiv'>\r\n                <Tooltip placement=\"topLeft\" title='add new client'>\r\n                    <Button\r\n                        className='btnModal'\r\n                        onClick={setModalIsOpenToTrue}\r\n                        size='large'\r\n                        icon={<PlusOutlined />}\r\n                    ></Button>\r\n                </Tooltip>\r\n                <Modal isOpen={modalIsOpen} >\r\n                    <button onClick={setModalIsOpenToFalse}>x</button>\r\n                    <ClientsModal newClient={true} edit={false} renderPage={renderPage} setModalIsOpenToFalse={setModalIsOpenToFalse} />\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\"clientsPageCard\">\r\n                <Row gutter={[16, 16]}>\r\n                    <React.Fragment>\r\n                        <CardComponent\r\n                            match={props.match}\r\n                            clients={ClientStore}\r\n                            renderPage={renderPage}\r\n                        />\r\n                    </React.Fragment>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ClientsPage","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Layout.jsx",["163","164","165","166","167"],"import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Navbar from '../header/NavBar'\r\nimport LandingPage from '../components/LandingPage'\r\nimport ClientsPage from '../components/ClientsPage'\r\nimport AboutPage from '../components/AboutPage'\r\nimport PostPage from \"../components/PostPage\"\r\nimport CardComponent from '../components/CardComponent'\r\nimport Client from '../components/Client'\r\nimport BrendPage from '../components/BrendPage'\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nfunction Layouts() {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={LandingPage} />\r\n                    <Route path=\"/about\" exact render={() => <AboutPage />} />\r\n                    <Route path=\"/clients\" exact render={({ match }) => <ClientsPage match={match} />} />\r\n                    <Route path=\"/clients/:client\" exact render={({ match }) => <BrendPage match={match} />} />\r\n                    <Route path=\"/clients/:client/:brend\" exact render={({ match }) => <PostPage match={match} />} />\r\n                    <Route path=\"/clients/:client/:brend/:brendname\" exact render={({ match }) => <PostPage match={match} />} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default Layouts","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\AboutPage.jsx",[],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\header\\NavBarElements.jsx",["168"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {NavLink as Link} from 'react-router-dom'\r\nimport {FaBars} from 'react-icons/fa'\r\n \r\n\r\nexport const Nav = styled.nav`\r\nbackground : #9f5f80; \r\nheight : 80px ; \r\ndisplay : flex;\r\njustify-content : space-between ; \r\npadding : 0.5rem; calc((100vw - 1000px)/2);\r\nz-index : 10;\r\nshadow:1px black;\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\ncolor:#fff;\r\ndisplay:flex;\r\nalign-items:center;\r\ntext-decoration:none;\r\nfont-size:1.5rem;\r\npadding:0 1rem ;\r\nheight:100%;\r\ncursor:pointer;\r\n\r\n&.active{\r\n    color : #ff8e71;\r\n}\r\n`\r\n\r\nexport const Bars = styled(FaBars)`\r\ndisplay:none; \r\ncolor:#fff;\r\n\r\n@media screen and  (max-width : 768px){\r\n    display : block;\r\n    position : absolute;\r\n    top:0;\r\n    right:0;\r\n    transform:transalate(-100% ,75%);\r\n    font-size:1.8rem;\r\n    cursor:pointer;\r\n}\r\n`\r\n\r\nexport const NavMenu = styled.div`\r\ndisplay : flex;\r\nalign-items:center;\r\nmargin-right:-24px;\r\n@media screen and (max-width:768px){\r\n    display:none;\r\n}\r\n`\r\n\r\nexport const NavBtn = styled.nav`\r\ndisplay:flex;\r\nalign-items:center;\r\nmargin-right:24px;\r\n\r\n@media screen and (max-width:768px){\r\n    display:none;\r\n}\r\n`\r\n\r\nexport const NavBtnLink =styled(Link)`\r\nborder-radius:4px;\r\nbackground:#ff8e71;\r\npadding:10px 22px;\r\ncolor:#fff;\r\nborder:none;\r\noutline:none;\r\ncursor:pointer;\r\ntransition:all 0.2s ease-in-out;\r\ntext-decoration:none;\r\n\r\n&:hover{\r\n    transition:all 0.2s ease-in-out;\r\n    background:#fff;\r\n    color:#010606;\r\n}\r\n`","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\CardComponent.jsx",["169","170","171","172","173","174","175","176"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport ClientStoreContext from '../Stores/Client/ClientStore';\r\nimport { Card, Avatar, Row } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\r\nimport { EditOutlined, DeleteOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport UpdateModal from './Modals/UpdateModal';\r\nimport Modal from 'react-modal';\r\nimport BrendPage from './BrendPage'\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nconst CardComponent = observer((props) => {\r\n    const ClientStore = useContext(ClientStoreContext)\r\n    const clients = props.clients.listOfClients\r\n    const [updateClient, setUpdateClient] = useState([])\r\n\r\n\r\n    const deleteClient = async (id) => {\r\n        const clientID = id\r\n        await ClientStore.deleteClient(clientID)\r\n        props.renderPage()\r\n    }\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const setModalIsOpenToTrue = () => {\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n    const getAndupdateClient = (id) => {\r\n        let thisClient = ClientStore.listOfClients.filter(client => client.id === id)\r\n        setUpdateClient(thisClient)\r\n    }\r\n    const linkAndData = (clientData) => {\r\n        <Link to={`/clients/${clientData.clientName}`}>\r\n            <BrendPage allData={clientData} />\r\n        </Link>\r\n    }\r\n    if (clients.length > 0) {\r\n        {/*  */ }\r\n        return (\r\n            <>\r\n                <Modal isOpen={modalIsOpen} >\r\n                    <button onClick={setModalIsOpenToFalse}>x</button>\r\n                    <UpdateModal renderPage={props.renderPage} newClient={false} edit={true} updateClient={updateClient} setModalIsOpenToFalse={setModalIsOpenToFalse} />\r\n                </Modal>\r\n                {clients.map((client, i) => {\r\n                    <BrendPage allData={client.clientName} />\r\n                    return (\r\n                        <div key={i} className=\"cardComp\">\r\n                            <Card\r\n                                \r\n                                style={{ width: 300, margin: 4 }}\r\n                                title={<Link style={{ color: 'black', underline: 'none' }} to={`/clients/${client.clientName}`}>{client.clientName}</Link>}\r\n                                cover={<Link to={`/clients/${client.clientName}`}><img\r\n\r\n                                    alt=\"example\"\r\n                                    src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                                /></Link>}\r\n                                actions={[\r\n                                    <EditOutlined onClick={() => { { getAndupdateClient(client.id) }; setModalIsOpenToTrue() }} key=\"edit\" />,\r\n                                    <DeleteOutlined name={client.clientName} value={client} onClick={() => { deleteClient(client.id) }} key=\"delete\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </div>\r\n                    )\r\n                }\r\n                )}\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                cant post yet\r\n            </div>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default CardComponent\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\BrendPage.jsx",["177","178","179","180","181","182","183","184","185"],"\r\nimport '../styles/CllientsPage.css'\r\nimport React, { useState, useEffect, useContext, useLayoutEffect } from 'react'\r\nimport axios from '../../node_modules/axios';\r\nimport { Tooltip, Button, Row } from 'antd';\r\nimport ClientsModal from './Modals/ClientModal'\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport CardComponent from './CardComponent'\r\nimport Modal from 'react-modal'\r\nimport { observer } from 'mobx-react-lite'\r\nimport BrendsStoreContext from '../Stores/Brend/BrendStore';\r\n\r\n\r\nexport const BrendPage = observer((props) => {\r\n\r\n    const BrendStore = useContext(BrendsStoreContext)\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const mr = props.match.params\r\n    console.log(mr)\r\n    const thisClient = props\r\n    console.log(thisClient)\r\n\r\n\r\n\r\n\r\n    const setModalIsOpenToTrue = () => {\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n\r\n    const renderPage = () =>{\r\n        BrendStore.getAllClients()\r\n    }\r\n\r\n    useEffect(() => {\r\n        Modal.setAppElement('body')\r\n    }, [BrendStore.listOfClients])\r\n\r\n    console.log(BrendStore.listOfBrendsforClient)\r\n    return (\r\n        <div className='clientsPageBody' >\r\n            <div className='addClientDiv'>\r\n                <Tooltip placement=\"topLeft\" title='add new client'>\r\n                    <Button\r\n                        className='btnModal'\r\n                        onClick={setModalIsOpenToTrue}\r\n                        size='large'\r\n                        icon={<PlusOutlined />}\r\n                    ></Button>\r\n                </Tooltip>\r\n                <Modal isOpen={modalIsOpen} >\r\n                    <button onClick={setModalIsOpenToFalse}>x</button>\r\n                    <ClientsModal newClient={true} edit={false} renderPage={renderPage} setModalIsOpenToFalse={setModalIsOpenToFalse} />\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\"BrendPageCard\">\r\n                <Row gutter={[16, 16]}>\r\n                    <React.Fragment>\r\n\r\n                    </React.Fragment>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BrendPage","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Client.jsx",["186","187","188"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Client = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\ClientModal.jsx",["189","190","191","192"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { SmileOutlined, } from '@ant-design/icons';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { useInput } from './input-hook'\r\nimport ClientStoreContext from '../../Stores/Client/ClientStore';\r\nimport { observer } from 'mobx-react-lite'\r\n\r\n\r\n\r\nconst ClientModal = observer((props) => {\r\n\r\n\r\n    const [form] = Form.useForm();\r\n    const [formLayout, setFormLayout] = useState('horizontal');\r\n    const ClientStore = useContext(ClientStoreContext)\r\n\r\n    const { value: ClientName, bind: bindClientName, reset: resetClientName } = useInput('');\r\n    const { value: ClientWebsite, bind: bindClientWebsite, reset: resetClientWebsite } = useInput('');\r\n\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        const clientData = {\r\n            brends: [],\r\n            clientName: ClientName,\r\n            clientLink: ClientWebsite,\r\n            urlPick: null,\r\n        }\r\n        await ClientStore.createClient(clientData)\r\n        props.setModalIsOpenToFalse()\r\n        props.renderPage()\r\n        resetClientName();\r\n        resetClientWebsite()\r\n\r\n\r\n    }\r\n\r\n    const onFormLayoutChange = ({ layout }) => {\r\n        setFormLayout(layout);\r\n    };\r\n\r\n    const formItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                labelCol: {\r\n                    span: 4,\r\n                },\r\n                wrapperCol: {\r\n                    span: 14,\r\n                },\r\n            }\r\n            : null;\r\n    const buttonItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                wrapperCol: {\r\n                    span: 14,\r\n                    offset: 9,\r\n                },\r\n            }\r\n            : null;\r\n\r\n\r\n    return (\r\n        <div className=\"ClientNewModpaForm\">\r\n                <Form\r\n                    {...formItemLayout}\r\n                    layout={formLayout}\r\n                    form={form}\r\n                    initialValues={{\r\n                        layout: formLayout,\r\n                    }}\r\n                    onValuesChange={onFormLayoutChange}\r\n                >\r\n                    <Form.Item label=\"Client Name\">\r\n                        <Input placeholder=\"Client Name\" {...bindClientName} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Client Website\">\r\n                        <Input placeholder=\"Client Website\" {...bindClientWebsite} />\r\n                    </Form.Item>\r\n                    <Form.Item {...buttonItemLayout}>\r\n                        <Button onClick={handleSubmit} type=\"primary\">Create The Client</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ClientModal\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\UpdateModal.jsx",["193","194","195","196","197","198"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { SmileOutlined, } from '@ant-design/icons';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { useInput } from './input-hook'\r\nimport ClientStoreContext from '../../Stores/Client/ClientStore';\r\nimport { observer } from 'mobx-react-lite'\r\nimport './modal.css'\r\n\r\n\r\nconst UpdateModal = observer((props) => {\r\n    const initialValues = {\r\n        name: \"\",\r\n        link: \"\",\r\n    };\r\n\r\n    const [form] = Form.useForm();\r\n    const [formLayout, setFormLayout] = useState('horizontal');\r\n    const ClientStore = useContext(ClientStoreContext)\r\n\r\n    const [UpdateName, setUpdateName] = useState(props.updateClient[0].clientName)\r\n    const [UpdateLink, setUpdateLink] = useState(props.updateClient[0].clientLink)\r\n\r\n    const handleName = (e) => {\r\n        const name = e.target.value\r\n        console.log(name)\r\n        setUpdateName(name)\r\n    }\r\n    const handleLink = (e) => {\r\n        const link = e.target.value\r\n        console.log(link)\r\n        setUpdateLink(link)\r\n    }\r\n\r\n    const handleSubmitUpdate = async (evt) => {\r\n        evt.preventDefault();\r\n        const clientData = {\r\n            brends: [],\r\n            clientName: UpdateName,\r\n            clientLink: UpdateLink,\r\n            urlPick: null,\r\n            id: props.updateClient[0].id || null\r\n        }\r\n        await ClientStore.updateClient(clientData)\r\n        props.setModalIsOpenToFalse()\r\n        props.renderPage()\r\n\r\n    }\r\n\r\n    const onFormLayoutChange = ({ layout }) => {\r\n        setFormLayout(layout);\r\n    };\r\n\r\n    const formItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                labelCol: {\r\n                    span: 4,\r\n                },\r\n                wrapperCol: {\r\n                    span: 14,\r\n                },\r\n            }\r\n            : null;\r\n    const buttonItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                wrapperCol: {\r\n                    span: 14,\r\n                    offset: 9,\r\n                },\r\n            }\r\n            : null;\r\n    const handleKeypress = e => {\r\n        //it triggers by pressing the enter key\r\n        if (e.keyCode === 13) {\r\n            handleSubmitUpdate();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ClientNewModpaForm\">\r\n            <Form\r\n                {...formItemLayout}\r\n                layout={formLayout}\r\n                form={form}\r\n                initialValues={{\r\n                    layout: formLayout,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n            >\r\n                <Form.Item label=\"Client Name\">\r\n                    <Input placeholder=\"Client Name\" name=\"name\" value={UpdateName} onChange={handleName} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Client Website\">\r\n                    <Input placeholder=\"Client Website\" onKeyPress={handleKeypress} name=\"link\" value={UpdateLink} onChange={handleLink} />\r\n                </Form.Item>\r\n                <Form.Item {...buttonItemLayout}>\r\n                    <Button onClick={handleSubmitUpdate} onKeyPress={handleKeypress} type=\"primary\">Update Client</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UpdateModal\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Client\\ClientStore.jsx",["199","200","201","202","203","204"],"import React, { Component } from 'react';\r\nimport {observable ,action, computed, get } from 'mobx' ; \r\nimport {createContext } from 'react';\r\nimport axios from 'axios'\r\nimport ClientData from './ClientData'\r\nimport { act } from '@testing-library/react';\r\n\r\n\r\n\r\n class ClientStore {\r\n    @observable listOfClients = [];\r\n\r\n    constructor(){\r\n        this.init()\r\n    }\r\n    init = async () => {\r\n        await this.getAllClients();\r\n    }\r\n\r\n    @action async getAllClients(){\r\n        const listData = [];\r\n        await axios.get(`http://localhost:8080/clients`)\r\n        .then((data) => {\r\n            // id , clientName , clientLink , brends , urlPick\r\n            // console.log(data.data.allClients)\r\n            this.listOfClients = data.data.allClients;\r\n            for(let c of data.data.allClients){\r\n                listData.push(\r\n                    new ClientData(\r\n                        c._id,\r\n                        c.clientName,\r\n                        c.clientLink,\r\n                        c.brends,\r\n                        c.urlPick\r\n                    )\r\n                )\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n        this.listOfClients = listData\r\n        console.log(listData)\r\n    }\r\n    @action async getClientById (id){\r\n        const data = await axios.get(`http://localhost:8080/clients/${id}`)\r\n        return data\r\n    }\r\n\r\n    @action async createClient(newClient){\r\n        await axios.post(`http://localhost:8080/clients` , newClient)\r\n\r\n    }\r\n    @action async deleteClient(id){\r\n        await axios.delete(`http://localhost:8080/clients/${id}`, {id : id})\r\n        const deleteClient = [...this.listOfClients]\r\n        deleteClient.filter(clientId => clientId.id===id)\r\n        console.log(deleteClient)\r\n    }\r\n\r\n\r\n\r\n    @action async updateClient(data){\r\n        console.log(data)\r\n        await axios.put(`http://localhost:8080/clients/${data.id}` , data)\r\n    }\r\n    \r\n}\r\nconst ClientStoreContext = createContext(new ClientStore())\r\nexport default ClientStoreContext;","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\input-hook.jsx",[],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Client\\ClientData.jsx",["205","206"],"import { observable, action, computed } from 'mobx'\r\n\r\nexport default class ClientData {\r\n    @observable id \r\n    @observable clientName \r\n    @observable clientLink \r\n    @observable brends = [] \r\n    @observable urlPick \r\n    constructor(id , clientName , clientLink , brends , urlPick) {\r\n        this.id = id\r\n        this.clientName = clientName\r\n        this.clientLink = clientLink\r\n        this.brends = brends\r\n        this.urlPick = urlPick\r\n    }\r\n}\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Brend\\BrendStore.jsx",["207","208","209","210","211","212","213","214","215"],"import React, { Component } from 'react';\r\nimport {observable ,action, computed, get } from 'mobx' ; \r\nimport {createContext } from 'react';\r\nimport axios from 'axios'\r\nimport BrendData from './BrendData'\r\n\r\n\r\n\r\n class BrendsStore {\r\n    @observable listOfBrendsforClient = [];\r\n\r\n    constructor(){\r\n        // this.init()\r\n    }\r\n    // init = async () => {\r\n    //     await this.getAllBrendsByClientID();\r\n    // }\r\n    // clientBrendId, id, clientBrendName, brendName, brendLink, indestry, dollarCo, pricing, owner, paymehod, posts\r\n    @action async getAllBrendsByClientID(id){\r\n        const listData = [];\r\n        await axios.get(`http://localhost:8080/clients/${id}`)\r\n        .then((data) => {\r\n            this.listOfBrendsforClient = data.data.allBrendsForClientById;\r\n            console.log(data)\r\n            // for(let c of data.data.allClients){\r\n            //     listData.push(\r\n            //         new ClientData(\r\n            //             c._id,\r\n            //             c.clientName,\r\n            //             c.clientLink,\r\n            //             c.brends,\r\n            //             c.urlPick\r\n            //         )\r\n            //     )\r\n            // }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n        // this.listOfClients = listData\r\n        // console.log(listData)\r\n        console.log(this.listOfBrendsforClient)\r\n    }\r\n    // @action async getClientById (id){\r\n    //     const data = await axios.get(`http://localhost:8080/clients/${id}`)\r\n    //     return data\r\n    // }\r\n\r\n    // @action async createClient(newClient){\r\n    //     await axios.post(`http://localhost:8080/clients` , newClient)\r\n\r\n    // }\r\n    // @action async deleteClient(id){\r\n    //     await axios.delete(`http://localhost:8080/clients/${id}`, {id : id})\r\n    //     const deleteClient = [...this.listOfClients]\r\n    //     deleteClient.filter(clientId => clientId.id===id)\r\n    //     console.log(deleteClient)\r\n    // }\r\n\r\n\r\n\r\n    // @action async updateClient(data){\r\n    //     console.log(data)\r\n    //     await axios.put(`http://localhost:8080/clients/${data.id}` , data)\r\n    // }\r\n    \r\n}\r\nconst BrendsStoreContext = createContext(new BrendsStore())\r\nexport default BrendsStoreContext;","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\Brend\\BrendData.jsx",[],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\BrendsCardComponent.jsx",["216","217","218","219","220","221","222","223","224","225","226"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport BrendsStoreContext from '../Stores/Brend/BrendStore';\r\nimport PostStoreContext from '../Stores/PostStore';\r\nimport { Card, Avatar, Row, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\r\nimport { EditOutlined, DeleteOutlined, SettingOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport BrendUpdateModal from './Modals/BrendUpdateModal';\r\nimport Modal from 'react-modal';\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nconst BrendsCardComponent = observer((props) => {\r\n    const BrendsStore = useContext(BrendsStoreContext)\r\n    const PostStore = useContext(PostStoreContext)\r\n    const theClient = BrendsStore.correntClient[0]\r\n    const clientBrends = BrendsStore.correntClient[0].brends\r\n    console.log(clientBrends)\r\n    console.log(theClient)\r\n\r\n    const [updateClientBrend, setUpdateClientBrend] = useState(clientBrends)\r\n    const [loading , setLoading] = useState(true)\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  //////delete brend by client id\r\n    const deleteBrend = async (id ,brendId) => {\r\n        // const clientID = id\r\n       const deleteBrendFromClient = await BrendsStore.deleteBrendFromClient(id , brendId)\r\n       \r\n       setUpdateClientBrend(deleteBrendFromClient)\r\n    }\r\n\r\n  //////update brend by client id\r\n\r\n    const getCorrentBrends = (clickBrend) => {\r\n        console.log(clickBrend)\r\n        let thisClientBrend = clientBrends.filter(brendid => brendid._id === clickBrend)\r\n        console.log(thisClientBrend)\r\n        BrendsStore.correntBrend = [thisClientBrend]\r\n        setUpdateClientBrend(thisClientBrend)\r\n    }\r\n\r\n\r\n    const setModalIsOpenToTrue = () => {\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n    const getAndupdateBrendByClientId =async (id,brendId) => {\r\n          const updateBrend = BrendsStore.updateBrandByClientId(id , brendId);\r\n          console.log(updateBrend)\r\n    }\r\n    const getPostsByBrendId = (clickBrend) =>{\r\n          console.log(clickBrend)\r\n          PostStore.getAllPostForABrend(theClient._id,clickBrend._id)\r\n          PostStore.correntBrend = [clickBrend];\r\n    }\r\n    useEffect(() => {\r\n        Modal.setAppElement('body')\r\n    }, [clientBrends])\r\n\r\n\r\n\r\n    if (clientBrends.length > 0) {\r\n        return (\r\n            <>\r\n                <Modal isOpen={modalIsOpen} >\r\n                    <button onClick={setModalIsOpenToFalse}>x</button>\r\n                    <BrendUpdateModal renderPage={props.renderPage} updateClientBrend={updateClientBrend} setModalIsOpenToFalse={setModalIsOpenToFalse} />\r\n                </Modal>\r\n                {clientBrends && clientBrends.map((brend, i) => {\r\n                    return (\r\n                        <div key={i} className=\"cardComp\">\r\n                            <Card\r\n                                onClick={(() => { getPostsByBrendId(brend) })}\r\n                                title={<Link style={{ color: 'black', underline: 'none' }} to={`/clients/${theClient.clientName}/${brend.brendName}`}>{brend.brendName}</Link>}                            \r\n                                cover={<Link to={`/clients/${theClient.clientName}/${brend.brendName}`}><img\r\n                                    alt=\"example\"\r\n                                    src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                                /></Link>}\r\n                                actions={[\r\n                                    <EditOutlined onClick={() => { { getCorrentBrends(brend._id) }; setModalIsOpenToTrue() }} key=\"edit\" />,\r\n                                    <DeleteOutlined onClick={() => { deleteBrend(brend.clientBrendId,brend._id ) }} key=\"delete\" />\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"Card title\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </div>\r\n                    )\r\n                }\r\n                )}\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Card style={{ width: 300, marginTop: 16 }} loading={loading}>\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                        }\r\n                        title=\"Card title\"\r\n                        description=\"This is the description\"\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default BrendsCardComponent\r\n\r\n\r\n// const initialValues = {\r\n//     brendName : \"\",\r\n//     indestry: \"\",\r\n//     brendLink:\"\",\r\n//     dollarCo: \"\",\r\n//     pricing: \"\",\r\n//     owner: [],\r\n//     paymehod: \"\",\r\n//     posts:[]\r\n//   };","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\BrendModal.jsx",["227","228","229","230","231"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { SmileOutlined, } from '@ant-design/icons';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { useInput } from './input-hook'\r\nimport BrendsStoreContext from '../../Stores/Brend/BrendStore';\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst initialValues = {\r\n    brendName : \"\",\r\n    indestry: \"\",\r\n    brendLink:\"\",\r\n    dollarCo: \"\",\r\n    pricing: \"\",\r\n    owner: \"\",\r\n    paymehod: \"\",\r\n    posts:[]\r\n  };\r\n\r\nconst BrendModal = observer((props) => {\r\n    const BrendsStore = useContext(BrendsStoreContext)\r\n    const clientBrends = BrendsStore.correntClient[0]\r\n    console.log(clientBrends)\r\n    const clientId = clientBrends._id\r\n    const [values, setValues] = useState(initialValues);\r\n    \r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n          ...values,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        const helder = {\r\n            brendName : values.brendName,\r\n            indestry: values.indestry,\r\n            brendLink:values.brendLink,\r\n            dollarCo: values.dollarCo,\r\n            pricing: values.pricing,\r\n            owner: values.owner,\r\n            paymehod: values.paymehod,\r\n            posts:[]\r\n        }\r\n        await BrendsStore.creatNewBrend(clientId,helder);\r\n        props.setModalIsOpenToFalse();\r\n    }\r\n    \r\n    \r\n    \r\n    ////////form layout\r\n    const onFormLayoutChange = ({ layout }) => {\r\n        setFormLayout(layout);\r\n    };\r\n    \r\n    const [form] = Form.useForm();\r\n    const [formLayout, setFormLayout] = useState('horizontal');\r\n    const formItemLayout =\r\n        formLayout === 'horizontal'? {\r\n                labelCol: {span: 4,},\r\n                wrapperCol: {span: 14,},\r\n            }: null;\r\n    const buttonItemLayout =\r\n        formLayout === 'horizontal'? {\r\n                wrapperCol: { span: 14, offset: 9, }, }: null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Brend-new-modal\">\r\n                <Form\r\n                    {...formItemLayout}\r\n                    layout={formLayout}\r\n                    form={form}\r\n                    initialValues={{\r\n                        layout: formLayout,\r\n                    }}\r\n                    onValuesChange={onFormLayoutChange}\r\n                >\r\n                    <Form.Item label=\"Brand Name\">\r\n                        <Input placeholder=\"Brand Name\" value={values.brendName} onChange={handleInputChange} name=\"brendName\"/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Indestry\">\r\n                        <Input placeholder=\"Indestry\" value={values.indestry} onChange={handleInputChange} name=\"indestry\"/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Brand Web Site\">\r\n                        <Input placeholder=\"Brand Web Site\" value={values.brendLink} onChange={handleInputChange} name=\"brendLink\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Dollar\">\r\n                        <Input placeholder=\"Dollar\" value={values.dollarCo} onChange={handleInputChange} name=\"dollarCo\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Pricing\">\r\n                        <Input placeholder=\"Pricing\" value={values.pricing} onChange={handleInputChange} name=\"pricing\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Brand workers\">\r\n                        <Input placeholder=\"Brand workers\" value={values.owner} onChange={handleInputChange} name=\"owner\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Paymehod\">\r\n                        <Input placeholder=\"Paymehod\" value={values.paymehod} onChange={handleInputChange} name=\"paymehod\"/>\r\n                    </Form.Item>\r\n                    <Form.Item {...buttonItemLayout}>\r\n                        <Button onClick={handleSubmit} type=\"primary\">Create The Brend</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BrendModal\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\Modals\\BrendUpdateModal.jsx",["232","233","234","235","236","237","238","239"],"import React, { useState, useEffect, useLayoutEffect, useContext } from 'react'\r\nimport { SmileOutlined, } from '@ant-design/icons';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { useInput } from './input-hook'\r\nimport ClientStoreContext from '../../Stores/Client/ClientStore';\r\nimport BrendsStoreContext from '../../Stores/Brend/BrendStore';\r\nimport { observer } from 'mobx-react-lite'\r\nimport './modal.css'\r\n\r\n\r\nconst UpdateModal = observer((props) => {\r\n\r\n\r\n    const [form] = Form.useForm();\r\n    const [formLayout, setFormLayout] = useState('horizontal');\r\n    const BrendStore = useContext(BrendsStoreContext)\r\n    const ClientStore = useContext(ClientStoreContext)\r\n\r\n    const [UpdateLink, setUpdateLink] = useState(props.updateClientBrend[0].brendLink)\r\n    const [UpdateName, setUpdateName] = useState(props.updateClientBrend[0].brendName)\r\n    const [UpdateClientBrendId, setUpdateClientBrendId] = useState(props.updateClientBrend[0].clientBrendId)\r\n    const [UpdateIndestry, setUpdateIndestry] = useState(props.updateClientBrend[0].indestry)\r\n    const [UpdatedollarCo, setUpdatedollarCo] = useState(props.updateClientBrend[0].dollarCo)\r\n    const [UpdatePricing, setUpdatePricing] = useState(props.updateClientBrend[0].pricing)\r\n    const [UpdateOwner, setUpdateOwner] = useState(props.updateClientBrend[0].owner)\r\n    const [UpdatePaymehod, setUpdatePaymehod] = useState(props.updateClientBrend[0].paymehod)\r\n    \r\n\r\n    const handleName = (e) => {\r\n        const name = e.target.value\r\n        console.log(name)\r\n        setUpdateName(name)\r\n    }\r\n    const handleLink = (e) => {\r\n        const link = e.target.value\r\n        console.log(link)\r\n        setUpdateLink(link)\r\n    }\r\n    const handleClientBrendId = (e) => {\r\n        const ClientBrendId = e.target.value\r\n        console.log(ClientBrendId)\r\n        setUpdateClientBrendId(ClientBrendId)\r\n    }\r\n    const handleIndestry = (e) => {\r\n        const Indestry = e.target.value\r\n        console.log(Indestry)\r\n        setUpdateIndestry(Indestry)\r\n    }   \r\n    const handledollarCo = (e) => {\r\n        const dollarCo = e.target.value\r\n        console.log(dollarCo)\r\n        setUpdatedollarCo(dollarCo)\r\n    }\r\n    const handlePricing = (e) => {\r\n        const Pricing = e.target.value\r\n        console.log(Pricing)\r\n        setUpdatePricing(Pricing)\r\n    }\r\n    const handleOwner = (e) => {\r\n        const Owner = e.target.value\r\n        console.log(Owner)\r\n        setUpdateOwner(Owner)\r\n    }\r\n    const handlePaymehod = (e) => {\r\n        const Paymehod = e.target.value\r\n        console.log(Paymehod)\r\n        setUpdatePaymehod(Paymehod)\r\n    }\r\n\r\n    const handleSubmitUpdate = async (evt) => {\r\n        evt.preventDefault();\r\n        const brendData = {\r\n            post: [],\r\n            brendName: UpdateName,\r\n            brendLink: UpdateLink,\r\n            indestry: UpdateIndestry,\r\n            dollarCo: UpdatedollarCo,\r\n            pricing: UpdatePricing,\r\n            owner: UpdateOwner,\r\n            paymehod: UpdatePaymehod,\r\n            clientBrendId: props.updateClientBrend[0].clientBrendId || null\r\n        }\r\n        // console.log(props.updateClientBrend[0].clientBrendId)\r\n        // console.log(props.updateClientBrend[0]._id)\r\n        // console.log(brendData)\r\n        await BrendStore.updateBrandByClientId(props.updateClientBrend[0].clientBrendId,props.updateClientBrend[0]._id,brendData)\r\n        props.setModalIsOpenToFalse()\r\n\r\n\r\n    }\r\n\r\n    const onFormLayoutChange = ({ layout }) => {\r\n        setFormLayout(layout);\r\n    };\r\n\r\n    const formItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                labelCol: {\r\n                    span: 4,\r\n                },\r\n                wrapperCol: {\r\n                    span: 14,\r\n                },\r\n            }\r\n            : null;\r\n    const buttonItemLayout =\r\n        formLayout === 'horizontal'\r\n            ? {\r\n                wrapperCol: {\r\n                    span: 14,\r\n                    offset: 9,\r\n                },\r\n            }\r\n            : null;\r\n    const handleKeypress = (e) => {\r\n        //it triggers by pressing the enter key\r\n        if (e.keyCode === 13) {\r\n            handleSubmitUpdate();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ClientNewModpaForm\">\r\n            <Form\r\n                {...formItemLayout}\r\n                layout={formLayout}\r\n                form={form}\r\n                initialValues={{\r\n                    layout: formLayout,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n            >\r\n                <Form.Item label=\"Brend Name\">\r\n                    <Input placeholder=\"Brend Name\" name=\"name\" value={UpdateName} onChange={handleName} />\r\n                </Form.Item>\r\n                <Form.Item label=\"brend Website\">\r\n                    <Input placeholder=\"brend Website\" onKeyPress={handleKeypress} name=\"link\" value={UpdateLink} onChange={handleLink} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Indestry\">\r\n                    <Input placeholder=\"Indestry\" onKeyPress={handleKeypress} name=\"Indestry\" value={UpdateIndestry} onChange={handleIndestry} />\r\n                </Form.Item>\r\n                <Form.Item label=\"dollarCo\">\r\n                    <Input placeholder=\"dollarCo\" onKeyPress={handleKeypress} name=\"dollarCo\" value={UpdatedollarCo} onChange={handledollarCo} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Pricing\">\r\n                    <Input placeholder=\"Pricing\" onKeyPress={handleKeypress} name=\"Pricing\" value={UpdatePricing} onChange={handlePricing} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Owner\">\r\n                    <Input placeholder=\"Owner\" onKeyPress={handleKeypress} name=\"Owner\" value={UpdateOwner} onChange={handleOwner} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Paymehod\">\r\n                    <Input placeholder=\"Paymehod\" onKeyPress={handleKeypress} name=\"Paymehod\" value={UpdatePaymehod} onChange={handlePaymehod} />\r\n                </Form.Item>\r\n                <Form.Item {...buttonItemLayout}>\r\n                    <Button onClick={handleSubmitUpdate} onKeyPress={handleKeypress} type=\"primary\">Update Brend</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UpdateModal\r\n\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\Stores\\PostStore.jsx",["240","241","242","243","244"],"import React, { Component } from 'react';\r\nimport { observable, action, computed, get } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nclass PostStore {\r\n    @observable listOfPostForBrend = [];\r\n    @observable correntClient = [];\r\n    @observable correntBrendPosts = [];\r\n    @observable correntBrend= [];\r\n    constructor() {\r\n        // this.init()\r\n    }\r\n\r\n    @action async getAllPostForABrend(clientId , brendId){\r\n        console.log(clientId)\r\n        console.log(brendId)\r\n\r\n        // const getPosts = await axios.get(`http://localhost:8080/clients/${clientId}/${brendId}`)\r\n        // console.log(getPosts)\r\n        // const updateBrendPoss = [...this.correntBrendPosts]\r\n        // updateBrendPoss.push(getPosts.data.theBrend)\r\n        // this.correntBrendPosts = updateBrendPoss\r\n        // console.log(this.correntBrendPosts)\r\n    }\r\n\r\n    ////////////////create new Post\r\n    @action async creatNewPost(clientId,brendId, postData) {\r\n        console.log(clientId)\r\n        console.log(postData)\r\n\r\n        const createPost = await axios.post(`http://localhost:8080/clients/${clientId}/${brendId}`, { postData })\r\n        console.log(createPost.data)\r\n        return createPost.data\r\n        // console.log(this.correntClient)\r\n        // this.correntClient[0].brends.unshift(createPost.data.docs)\r\n    }\r\n\r\n    ////////////////delete a Post from brend\r\n    @action async deletePostFromBrend(clientId, brendId ,postId) {\r\n        console.log(clientId)\r\n        console.log(brendId)\r\n        console.log(postId)\r\n        const thePostToDelete = await axios.delete(`http://localhost:8080/clients/${clientId}/${brendId}/${postId}`)\r\n        console.log(thePostToDelete)\r\n        if (thePostToDelete.data.success) {\r\n            console.log(thePostToDelete.data.response)\r\n            console.log(`${this.listOfPostForBrend} correntBrend`)\r\n            // const updateClient = { ...this.correntClient }\r\n            // console.log(updateClient[0].brends + \"  update client before\")\r\n            // const newArr = []\r\n            // const newmap = updateClient[0].brends.map(brend => {\r\n            //     console.log(typeof brend._id)\r\n            //     console.log(typeof thePostToDelete.data.response._id)\r\n            //     if (brend._id !== thePostToDelete.data.response._id) {\r\n            //         newArr.push(brend)\r\n            //     }\r\n            // });\r\n            // console.log(newmap)\r\n            // console.log(newArr)\r\n            // updateClient[0].brends.splice(0, updateClient[0].brends.length, ...newArr)\r\n            // this.correntClient[0] = updateClient[0]\r\n            // console.log(this.correntClient[0])\r\n\r\n        }\r\n        return thePostToDelete.data\r\n    }\r\n\r\n    //////update Post by brend by id\r\n    @action async updatePostByBrendId(clientId, brendId,postId, data) {\r\n        console.log(clientId, brendId,postId, data)\r\n        const updatedBrend = await axios.put(`http://localhost:8080/clients/${clientId}/${brendId}/${postId}`, data)\r\n        console.log(updatedBrend)\r\n        if (updatedBrend.data.success) {\r\n        console.log(updatedBrend.data.success)\r\n\r\n            // const updateClientBrend = { ...this.correntClient }\r\n            // let checker = updateClientBrend[0];\r\n            // const inr = checker.brends.findIndex(id => id._id === brendId )\r\n            // updateClientBrend[0].brends[inr] = updatedBrend.data.response;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst PostStoreContext = createContext(new PostStore())\r\nexport default PostStoreContext;\r\n\r\n","C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\PostPage.jsx",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"C:\\Users\\97254\\Desktop\\PROJECTS\\G-CRM\\front\\src\\components\\TableComponent.jsx",["260","261","262","263","264","265","266","267","268","269","270"],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":26},{"ruleId":"275","severity":1,"message":"279","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":16},{"ruleId":"275","severity":1,"message":"280","line":3,"column":18,"nodeType":"277","messageId":"278","endLine":3,"endColumn":23},{"ruleId":"275","severity":1,"message":"281","line":3,"column":25,"nodeType":"277","messageId":"278","endLine":3,"endColumn":31},{"ruleId":"275","severity":1,"message":"282","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"283","line":4,"column":20,"nodeType":"277","messageId":"278","endLine":4,"endColumn":29},{"ruleId":"275","severity":1,"message":"284","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":19},{"ruleId":"275","severity":1,"message":"285","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":14},{"ruleId":"271","replacedBy":"286"},{"ruleId":"273","replacedBy":"287"},{"ruleId":"275","severity":1,"message":"279","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":16},{"ruleId":"275","severity":1,"message":"280","line":3,"column":18,"nodeType":"277","messageId":"278","endLine":3,"endColumn":23},{"ruleId":"275","severity":1,"message":"281","line":3,"column":25,"nodeType":"277","messageId":"278","endLine":3,"endColumn":31},{"ruleId":"275","severity":1,"message":"282","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"283","line":4,"column":20,"nodeType":"277","messageId":"278","endLine":4,"endColumn":29},{"ruleId":"275","severity":1,"message":"288","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":13},{"ruleId":"275","severity":1,"message":"289","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"290","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":14},{"ruleId":"275","severity":1,"message":"291","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":19},{"ruleId":"275","severity":1,"message":"292","line":11,"column":10,"nodeType":"277","messageId":"278","endLine":11,"endColumn":18},{"ruleId":"275","severity":1,"message":"293","line":3,"column":17,"nodeType":"277","messageId":"278","endLine":3,"endColumn":21},{"ruleId":"275","severity":1,"message":"283","line":3,"column":33,"nodeType":"277","messageId":"278","endLine":3,"endColumn":42},{"ruleId":"275","severity":1,"message":"294","line":3,"column":56,"nodeType":"277","messageId":"278","endLine":3,"endColumn":71},{"ruleId":"275","severity":1,"message":"288","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"275","severity":1,"message":"295","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":22},{"ruleId":"275","severity":1,"message":"296","line":7,"column":24,"nodeType":"277","messageId":"278","endLine":7,"endColumn":40},{"ruleId":"275","severity":1,"message":"297","line":7,"column":42,"nodeType":"277","messageId":"278","endLine":7,"endColumn":57},{"ruleId":"275","severity":1,"message":"279","line":12,"column":27,"nodeType":"277","messageId":"278","endLine":12,"endColumn":33},{"ruleId":"275","severity":1,"message":"280","line":12,"column":35,"nodeType":"277","messageId":"278","endLine":12,"endColumn":40},{"ruleId":"275","severity":1,"message":"281","line":12,"column":42,"nodeType":"277","messageId":"278","endLine":12,"endColumn":48},{"ruleId":"275","severity":1,"message":"298","line":13,"column":8,"nodeType":"277","messageId":"278","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"299","line":20,"column":12,"nodeType":"277","messageId":"278","endLine":20,"endColumn":19},{"ruleId":"275","severity":1,"message":"300","line":20,"column":21,"nodeType":"277","messageId":"278","endLine":20,"endColumn":31},{"ruleId":"275","severity":1,"message":"301","line":21,"column":12,"nodeType":"277","messageId":"278","endLine":21,"endColumn":18},{"ruleId":"275","severity":1,"message":"302","line":21,"column":20,"nodeType":"277","messageId":"278","endLine":21,"endColumn":29},{"ruleId":"275","severity":1,"message":"282","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"303","line":8,"column":8,"nodeType":"277","messageId":"278","endLine":8,"endColumn":21},{"ruleId":"275","severity":1,"message":"304","line":9,"column":8,"nodeType":"277","messageId":"278","endLine":9,"endColumn":14},{"ruleId":"275","severity":1,"message":"298","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14},{"ruleId":"275","severity":1,"message":"305","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"306","line":5,"column":24,"nodeType":"277","messageId":"278","endLine":5,"endColumn":27},{"ruleId":"275","severity":1,"message":"279","line":7,"column":27,"nodeType":"277","messageId":"278","endLine":7,"endColumn":33},{"ruleId":"275","severity":1,"message":"280","line":7,"column":35,"nodeType":"277","messageId":"278","endLine":7,"endColumn":40},{"ruleId":"275","severity":1,"message":"281","line":7,"column":42,"nodeType":"277","messageId":"278","endLine":7,"endColumn":48},{"ruleId":"275","severity":1,"message":"297","line":8,"column":40,"nodeType":"277","messageId":"278","endLine":8,"endColumn":55},{"ruleId":"275","severity":1,"message":"307","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":91,"column":68,"nodeType":"310","messageId":"311","endLine":91,"endColumn":102},{"ruleId":"275","severity":1,"message":"283","line":3,"column":27,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"294","line":3,"column":50,"nodeType":"277","messageId":"278","endLine":3,"endColumn":65},{"ruleId":"275","severity":1,"message":"288","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"275","severity":1,"message":"312","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":20},{"ruleId":"275","severity":1,"message":"295","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":22},{"ruleId":"275","severity":1,"message":"296","line":7,"column":24,"nodeType":"277","messageId":"278","endLine":7,"endColumn":40},{"ruleId":"275","severity":1,"message":"297","line":7,"column":42,"nodeType":"277","messageId":"278","endLine":7,"endColumn":57},{"ruleId":"275","severity":1,"message":"303","line":8,"column":8,"nodeType":"277","messageId":"278","endLine":8,"endColumn":21},{"ruleId":"275","severity":1,"message":"313","line":20,"column":11,"nodeType":"277","messageId":"278","endLine":20,"endColumn":22},{"ruleId":"275","severity":1,"message":"282","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"293","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"314","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"315","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"314","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"315","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"316","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"317","line":11,"column":11,"nodeType":"277","messageId":"278","endLine":11,"endColumn":24},{"ruleId":"275","severity":1,"message":"305","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"318","line":2,"column":30,"nodeType":"277","messageId":"278","endLine":2,"endColumn":38},{"ruleId":"275","severity":1,"message":"319","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":43},{"ruleId":"275","severity":1,"message":"320","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"321","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":13},{"ruleId":"275","severity":1,"message":"322","line":1,"column":22,"nodeType":"277","messageId":"278","endLine":1,"endColumn":28},{"ruleId":"275","severity":1,"message":"318","line":1,"column":30,"nodeType":"277","messageId":"278","endLine":1,"endColumn":38},{"ruleId":"275","severity":1,"message":"305","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"318","line":2,"column":30,"nodeType":"277","messageId":"278","endLine":2,"endColumn":38},{"ruleId":"275","severity":1,"message":"319","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":43},{"ruleId":"275","severity":1,"message":"323","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":19},{"ruleId":"275","severity":1,"message":"324","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":14,"column":5,"nodeType":"327","messageId":"328","endLine":16,"endColumn":6},{"ruleId":"275","severity":1,"message":"329","line":40,"column":19,"nodeType":"277","messageId":"278","endLine":40,"endColumn":31},{"ruleId":"330","severity":1,"message":"331","line":43,"column":61,"nodeType":"332","messageId":"333","endLine":43,"endColumn":63},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"306","line":5,"column":24,"nodeType":"277","messageId":"278","endLine":5,"endColumn":27},{"ruleId":"275","severity":1,"message":"334","line":5,"column":29,"nodeType":"277","messageId":"278","endLine":5,"endColumn":37},{"ruleId":"275","severity":1,"message":"279","line":7,"column":27,"nodeType":"277","messageId":"278","endLine":7,"endColumn":33},{"ruleId":"275","severity":1,"message":"280","line":7,"column":35,"nodeType":"277","messageId":"278","endLine":7,"endColumn":40},{"ruleId":"275","severity":1,"message":"281","line":7,"column":42,"nodeType":"277","messageId":"278","endLine":7,"endColumn":48},{"ruleId":"275","severity":1,"message":"297","line":8,"column":40,"nodeType":"277","messageId":"278","endLine":8,"endColumn":55},{"ruleId":"275","severity":1,"message":"296","line":8,"column":57,"nodeType":"277","messageId":"278","endLine":8,"endColumn":73},{"ruleId":"275","severity":1,"message":"335","line":24,"column":22,"nodeType":"277","messageId":"278","endLine":24,"endColumn":32},{"ruleId":"275","severity":1,"message":"336","line":53,"column":11,"nodeType":"277","messageId":"278","endLine":53,"endColumn":38},{"ruleId":"308","severity":1,"message":"309","line":86,"column":68,"nodeType":"310","messageId":"311","endLine":86,"endColumn":99},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"314","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"315","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"316","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"283","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"294","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"314","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"315","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"316","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"313","line":17,"column":11,"nodeType":"277","messageId":"278","endLine":17,"endColumn":22},{"ruleId":"275","severity":1,"message":"337","line":21,"column":12,"nodeType":"277","messageId":"278","endLine":21,"endColumn":31},{"ruleId":"275","severity":1,"message":"338","line":39,"column":11,"nodeType":"277","messageId":"278","endLine":39,"endColumn":30},{"ruleId":"275","severity":1,"message":"305","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"318","line":2,"column":30,"nodeType":"277","messageId":"278","endLine":2,"endColumn":38},{"ruleId":"275","severity":1,"message":"319","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":43},{"ruleId":"325","severity":1,"message":"326","line":14,"column":5,"nodeType":"327","messageId":"328","endLine":16,"endColumn":6},{"ruleId":"275","severity":1,"message":"339","line":3,"column":50,"nodeType":"277","messageId":"278","endLine":3,"endColumn":57},{"ruleId":"275","severity":1,"message":"294","line":3,"column":59,"nodeType":"277","messageId":"278","endLine":3,"endColumn":74},{"ruleId":"275","severity":1,"message":"340","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":17},{"ruleId":"275","severity":1,"message":"341","line":5,"column":19,"nodeType":"277","messageId":"278","endLine":5,"endColumn":25},{"ruleId":"275","severity":1,"message":"306","line":5,"column":27,"nodeType":"277","messageId":"278","endLine":5,"endColumn":30},{"ruleId":"275","severity":1,"message":"295","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":22},{"ruleId":"275","severity":1,"message":"296","line":6,"column":24,"nodeType":"277","messageId":"278","endLine":6,"endColumn":40},{"ruleId":"275","severity":1,"message":"297","line":6,"column":42,"nodeType":"277","messageId":"278","endLine":6,"endColumn":57},{"ruleId":"275","severity":1,"message":"342","line":6,"column":59,"nodeType":"277","messageId":"278","endLine":6,"endColumn":71},{"ruleId":"275","severity":1,"message":"343","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":27},{"ruleId":"275","severity":1,"message":"344","line":8,"column":8,"nodeType":"277","messageId":"278","endLine":8,"endColumn":13},{"ruleId":"275","severity":1,"message":"313","line":22,"column":11,"nodeType":"277","messageId":"278","endLine":22,"endColumn":22},{"ruleId":"275","severity":1,"message":"345","line":28,"column":11,"nodeType":"277","messageId":"278","endLine":28,"endColumn":28},{"ruleId":"346","severity":1,"message":"347","line":77,"column":15,"nodeType":"332","endLine":83,"endColumn":6},{"ruleId":"346","severity":1,"message":"348","line":83,"column":8,"nodeType":"349","endLine":83,"endColumn":21,"suggestions":"350"},{"ruleId":"275","severity":1,"message":"283","line":3,"column":27,"nodeType":"277","messageId":"278","endLine":3,"endColumn":36},{"ruleId":"275","severity":1,"message":"339","line":3,"column":50,"nodeType":"277","messageId":"278","endLine":3,"endColumn":57},{"ruleId":"275","severity":1,"message":"294","line":3,"column":59,"nodeType":"277","messageId":"278","endLine":3,"endColumn":74},{"ruleId":"275","severity":1,"message":"317","line":10,"column":7,"nodeType":"277","messageId":"278","endLine":10,"endColumn":20},{"ruleId":"275","severity":1,"message":"351","line":30,"column":12,"nodeType":"277","messageId":"278","endLine":30,"endColumn":21},{"ruleId":"275","severity":1,"message":"335","line":30,"column":23,"nodeType":"277","messageId":"278","endLine":30,"endColumn":33},{"ruleId":"275","severity":1,"message":"352","line":31,"column":12,"nodeType":"277","messageId":"278","endLine":31,"endColumn":22},{"ruleId":"275","severity":1,"message":"353","line":31,"column":24,"nodeType":"277","messageId":"278","endLine":31,"endColumn":37},{"ruleId":"275","severity":1,"message":"354","line":33,"column":11,"nodeType":"277","messageId":"278","endLine":33,"endColumn":21},{"ruleId":"275","severity":1,"message":"313","line":34,"column":11,"nodeType":"277","messageId":"278","endLine":34,"endColumn":22},{"ruleId":"275","severity":1,"message":"355","line":35,"column":11,"nodeType":"277","messageId":"278","endLine":35,"endColumn":18},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'LandingPage' is defined but never used.","'Navbar' is defined but never used.",["356"],["357"],"'axios' is defined but never used.","'computer' is defined but never used.","'people' is defined but never used.","'ClientsPage' is defined but never used.","'observer' is defined but never used.","'Link' is defined but never used.","'useLayoutEffect' is defined but never used.","'EditOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'FadeIn' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'CardComponent' is defined but never used.","'Client' is defined but never used.","'React' is defined but never used.","'Row' is defined but never used.","'BrendPage' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ClientsModal' is defined but never used.","'ClientStore' is assigned a value but never used.","'SmileOutlined' is defined but never used.","'Radio' is defined but never used.","'useInput' is defined but never used.","'initialValues' is assigned a value but never used.","'computed' is defined but never used.","'get' is defined but never used.","'ClientData' is defined but never used.","'act' is defined but never used.","'action' is defined but never used.","'BrendData' is defined but never used.","'FaCommentsDollar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'updateBrends' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Skeleton' is defined but never used.","'setLoading' is assigned a value but never used.","'getAndupdateBrendByClientId' is assigned a value but never used.","'UpdateClientBrendId' is assigned a value but never used.","'handleClientBrendId' is assigned a value but never used.","'useMemo' is defined but never used.","'Tooltip' is defined but never used.","'Button' is defined but never used.","'PlusOutlined' is defined but never used.","'BrendsCardComponent' is defined but never used.","'Modal' is defined but never used.","'clientsBrendsById' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'brendId' and 'clientId'. Either include them or remove the dependency array.","ArrayExpression",["358"],"'isLoading' is assigned a value but never used.","'brendPosts' is assigned a value but never used.","'setBrendPosts' is assigned a value but never used.","'BrendStore' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},"Update the dependencies array to be: [brendId, clientId, requestData]",{"range":"361","text":"362"},[2600,2613],"[brendId, clientId, requestData]"]